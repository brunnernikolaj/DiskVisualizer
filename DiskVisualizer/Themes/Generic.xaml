<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:DiskVisualizer">

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <local:InvertedBoolToVisConverter x:Key="invertedBoolToVisConverter" />
    <FontFamily x:Key="Gotham">/resources/GOTHAM-LIGHT.TTF</FontFamily>
    <FontFamily x:Key="Gotham-Bold">/resources/GOTHAM-BOLD.TTF</FontFamily>
    <Style x:Key="ButtonBorder" TargetType="Border">
        <Style.Resources>
            <local:DarkenColorConverter x:Key="DarkenColorConverter" />
        </Style.Resources>
        <Setter Property="Border.Background" Value="{Binding Background}"/>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="{Binding RelativeSource={RelativeSource Self},Mode=OneTime, Path=Background,Converter={StaticResource DarkenColorConverter},ConverterParameter=Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScanNowButtonBorder" TargetType="Border">
        <Style.Resources>
            <local:DarkenColorConverter x:Key="DarkenColorConverter" />
        </Style.Resources>
        <Setter Property="Border.Background" Value="{Binding Model.Background}"/>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="{Binding RelativeSource={RelativeSource Self},Mode=OneTime, Path=Background,Converter={StaticResource DarkenColorConverter},ConverterParameter=Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ButtonBorderNoBinding" TargetType="Border">
        <Style.Resources>
            <local:DarkenColorConverter x:Key="DarkenColorConverter" />
        </Style.Resources>
        <Setter Property="Border.Background" Value="#80CBC4"/>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="{Binding RelativeSource={RelativeSource Self},Mode=OneTime, Path=Background,Converter={StaticResource DarkenColorConverter},ConverterParameter=Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="Border">
        <Style.Resources>
            <local:DarkenColorConverter x:Key="DarkenColorConverter" />
        </Style.Resources>
        <Setter Property="Border.Background" Value="#80CBC4"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding Path=Model.IsAItemSelected}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Border.Background" Value="{Binding RelativeSource={RelativeSource Self},Mode=OneTime, Path=Background,Converter={StaticResource DarkenColorConverter},ConverterParameter=Background}" />
                <Setter Property="Border.Cursor" Value="Hand"></Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteOverlay" TargetType="Border">
        <Style.Resources>
            <local:DarkenColorConverter x:Key="DarkenColorConverter" />
        </Style.Resources>
        <Setter Property="Border.Background" Value="#ffcdd2"/>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.Background" Value="{Binding RelativeSource={RelativeSource Self},Mode=OneTime, Path=Background,Converter={StaticResource DarkenColorConverter},ConverterParameter=Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:DiskView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DiskView}">
                    <Grid>
                        <Grid HorizontalAlignment="Center" x:Name="StartView" VerticalAlignment="Center">
                            <TextBlock FontSize="26" HorizontalAlignment="Center" VerticalAlignment="Top" Text="Storage Devices" FontFamily="Gotham" ></TextBlock>
                            <ListBox ItemsSource="{Binding Drives}" x:Name="ItemContainer" Margin="0,50,0,0" ItemsPanel="{DynamicResource DiskViewItemPanel}"  BorderBrush="{x:Null}" Background="{x:Null}" Foreground="Black">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding MouseCommand}" CommandParameter="{RelativeSource Self}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid >
                                            <Border Style="{StaticResource ButtonBorder}" Margin="0,0,0,20"  VerticalAlignment="Stretch" BorderThickness="2"  HorizontalAlignment="Stretch">
                                                <TextBlock Text="{Binding Name}" Margin="0" FontSize="22" FontFamily="Gotham" FontWeight="Bold" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                            </Border>
                                            <TextBlock Text="{Binding SizeText}" VerticalAlignment="Bottom"  HorizontalAlignment="Center"></TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Background" Value="{Binding Background}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <Border Cursor="Hand" BorderBrush="{TemplateBinding BorderBrush}" Height="300" Width="200" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                                                        <ContentPresenter x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                                    </Border>
                                                </ControlTemplate>

                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.Resources>
                                    <ItemsPanelTemplate x:Key="DiskViewItemPanel">
                                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.Resources>
                            </ListBox>
                        </Grid>

                        <Grid x:Name="DriveView" Background="Transparent" Visibility="Hidden" Margin="0,25,0,0">
                            <Border Style="{StaticResource ScanNowButtonBorder}" VerticalAlignment="Bottom" Cursor="Hand" HorizontalAlignment="Center" Width="300" Margin="0,0,5,15" Height="60" Visibility="{Binding Model.ShowScanButtonText, Converter={StaticResource boolToVisibilityConverter}}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding BackCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock VerticalAlignment="Center" FontFamily="Gotham" HorizontalAlignment="Center" FontSize="18" Foreground="White" Margin="10,0,10,0" Text="Back"></TextBlock>
                            </Border>
                            <Border Style="{StaticResource ScanNowButtonBorder}" x:Name="ScanButton" Cursor="Hand" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="15,15,15,15" Width="{Binding Model.Width}" Height="{Binding Model.Height}">
                                <Grid >
                                    <Grid Visibility="{Binding Model.ShowScanButtonText, Converter={StaticResource boolToVisibilityConverter}}">
                                        <StackPanel  HorizontalAlignment="Center" VerticalAlignment="Center" >
                                            <TextBlock Text="{Binding Model.DriveName}" FontFamily="Gotham"  TextAlignment="Center" FontSize="22" Foreground="White"  FontWeight="Bold"/>
                                            <TextBlock Text="{Binding Model.SizeText}" FontFamily="Gotham" Margin="0,5,0,0"  TextAlignment="Center" FontSize="14" Foreground="White"  />
                                        </StackPanel>

                                        <TextBlock Text="SCAN NOW" VerticalAlignment="Bottom" FontFamily="Gotham" HorizontalAlignment="Center" FontSize="18" Foreground="White" Margin="0,0,0,15" FontWeight="Medium"></TextBlock>
                                    </Grid>
                                    <Grid Visibility="{Binding Model.ShowScanButtonText, Converter={StaticResource invertedBoolToVisConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock Text="{Binding Model.Progress}" x:Name="ProgressText" FontFamily="Gotham" Foreground="White" FontSize="24" TextAlignment="Center"></TextBlock>
                                    </Grid>
                                </Grid>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding ScanDrive}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            
        </Style.Resources>
    </Style>



    <Style TargetType="{x:Type local:TreeMap}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeMap}">
                    <Grid>
                        <TextBlock Margin="5,5,0,5" FontFamily="Gotham" HorizontalAlignment="Left" FontSize="18"  VerticalAlignment="Top" Text="{Binding Model.CurrentDir}"></TextBlock>
                        <StackPanel  HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                            <local:CustomSliderControl Margin="0,0,15,0" x:Name="slider" Value="{Binding Model.SliderValue, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsSnapToTickEnabled="True" Width="80" SmallChange="1" Maximum="3" Minimum="1">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="ValueChanged">
                                        <i:InvokeCommandAction Command="{Binding Model.SliderValueChanged}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </local:CustomSliderControl>
                            <Border Style="{StaticResource DeleteButtonStyle}"  Margin="0,0,5,0" Height="30" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding Model.DeleteButton}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock VerticalAlignment="Center" FontFamily="Gotham" HorizontalAlignment="Center" Foreground="White" Margin="10,0,10,0" Text="Delete"></TextBlock>
                            </Border>
                            <Border Style="{StaticResource ButtonBorderNoBinding}" Cursor="Hand" Margin="0,0,5,0" Height="30" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding Model.BackButton}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock VerticalAlignment="Center" FontFamily="Gotham" HorizontalAlignment="Center" Foreground="White" Margin="10,0,10,0" Text="New Drive"></TextBlock>
                            </Border>
                        </StackPanel>
                        
                        <ListBox ItemsSource="{Binding Items}" x:Name="ItemContainer" Margin="0,30,0,0" ItemsPanel="{DynamicResource TreeMapItemPanel}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                             BorderBrush="{x:Null}" Background="{x:Null}" Foreground="Black">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Background" Value="{Binding Background}"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="{Binding Margin}"/>
                                    <Setter Property="VerticalAlignment" Value="Top"/>
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Grid>
                                                    <Border Cursor="Hand" Width="{Binding Width}" Height="{Binding Height}" ToolTip="{Binding ToolTip}" BorderThickness="2"  VerticalAlignment="Top" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" >
                                                        
                                                    </Border>
                                                    <Border Cursor="Hand" Style="{StaticResource DeleteOverlay}" Width="{Binding Width}" Height="{Binding Height}" ToolTip="{Binding ToolTip}" Visibility="{Binding IsSelected,Converter={StaticResource boolToVisibilityConverter}}" BorderThickness="2"  VerticalAlignment="Top">
            
                                                    </Border>
                                                    <ContentPresenter x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                                </Grid>
                                                
                                                <ControlTemplate.Resources>
                                                    <local:DarkenColorConverter x:Key="DarkenColorConverter" />
                                                </ControlTemplate.Resources>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Mode=OneTime, Path=Background,Converter={StaticResource DarkenColorConverter},ConverterParameter=Background}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock FontFamily="Gotham-Bold" FontSize="12" Text="{Binding Text}" HorizontalAlignment="Center"  Foreground="#212121" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.Resources>
                                <ItemsPanelTemplate x:Key="TreeMapItemPanel">
                                    <Grid IsItemsHost="True" />
                                </ItemsPanelTemplate>
                            </ListBox.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding Model.ListboxItemLeftButton}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomSliderControl}" BasedOn="{StaticResource {x:Type Slider}}">

    </Style>
</ResourceDictionary>
